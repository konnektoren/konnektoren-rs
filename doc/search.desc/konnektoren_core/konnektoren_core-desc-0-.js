searchState.loadedDescShard("konnektoren_core", 0, "experience points\nModule for creating certificates for the Konnektoren.\nThis module contains all the challenges that can be solved …\nThis module contains the command pattern implementation …\nGame module.\nPlayer profile module.\nThis is a prelude module that re-exports the most …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLoad assets from the filesystem (used in SSR)\nLoad assets from URLs (used in CSR)\nReturns the argument unchanged.\nCreate a file-based asset loader from a single directory\nCalls <code>U::from(self)</code>.\nLoad a binary asset (like a zip file)\nCreate a file-based asset loader\nCreate a URL-based asset loader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrait for serializing and deserializing from base64 …\nTrait for serializing and deserializing from base64 …\nDeserialize from base64 encoded string\nDeserialize from base64 encoded string\nDeserialize from base64 encoded string using MessagePack\nDeserialize from base64 encoded string using MessagePack\nSerialize to base64 encoded string\nSerialize to base64 encoded string\nSerialize to base64 encoded string using MessagePack\nSerialize to base64 encoded string using MessagePack\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAdd a challenge to the history if it is different from the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn iterator over the variants of ChallengeType\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the JSON schema for creating challenges\nGet the JSON schema for a specific challenge variant\nGet the JSON schema as a pretty-printed string\nAn iterator over the variants of ChallengeVariant\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAvailable choices for each placeholder\nThe correct answer\nDescription of the challenge\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique identifier for the challenge\nChoice identifier\nSelected option IDs for each choice\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList of contextual items\nDisplay name of the challenge\nAvailable options for this choice\nTemplate string with placeholders like {0}, {1}\nCSS styles for the challenge\nCustom data for the challenge\nDescription of the challenge\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHTML content for the challenge\nOptional internationalization data\nUnique identifier for the custom challenge\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJavaScript code for the challenge\nDisplay name of the challenge\nOptional package URL for external content\nOptional HTML content for results display\nOptional task IDs for selection\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAnswers for each gap\nThe correct answer\nDescription of the challenge\nExplanation of the grammar rule\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGaps to be filled\nHelpful hints\nUnique identifier for the challenge\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLanguage code\nDisplay name of the challenge\nAvailable options for this gap\nPosition of the gap in the sentence\nIndex of the question being answered\nList of gap-fill questions\nThe sentence with gaps\nTranslation of the sentence\nDescription of the content\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique identifier for the informative content\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLanguage code\nDisplay name of the content\nMultilingual text content\nThe informative text content\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHelp text or context\nUnique identifier for the challenge\nOption identifier\nOptional image/icon identifier\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLanguage code (e.g., “en”, “de”)\nDisplay name of the challenge\nDisplay text for the option\nID of the correct option\nAvailable answer options\nThe question text\nList of questions\nCorrect order (indices)\nDescription of the challenge\nElements to be ordered\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique identifier for the challenge\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList of ordering items\nDisplay name of the challenge\nUser’s ordering (indices)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the challenge configuration config.yml from the package\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the performance in percentage.\nReturns the number of stars based on the performance. 3 …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription of what’s coming\nEstimated time for completion\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique identifier for the placeholder\nOptional image identifier\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLanguage code\nDisplay name of the placeholder\nInformative text content\nThe text content\nType of placeholder\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAttempts to solve a part of the challenge with the given …\nTable column definitions\nDescription of the challenge\nColumn description\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique identifier for the challenge\nColumn identifier\nRow identifier\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDisplay name of the challenge\nTable rows to be sorted\nColumn title\nValues for each column\nExact number of tasks\nRandom selection with optional range\nRange of task indices\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescription of the vocabulary set\nReturns the argument unchanged.\nReturns the argument unchanged.\nOptional icon identifier\nOptional icon identifier\nUnique identifier for the vocabulary set\nItem identifier\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList of vocabulary items\nLanguage code\nDisplay name of the vocabulary set\nPhonetic pronunciation\nThe word or phrase\nTranslation of the word\nThis module contains the implementation of challenge-level …\nThis module defines the core command structure and traits …\nThis module contains the implementation of game-level …\nRepresents challenge-level commands that can be executed …\nCommand to finish the challenge with a custom result.\nCommand to move to the next task within a challenge.\nCommand to move to the previous task within a challenge.\nCommand to solve a multiple choice option.\nExecutes the challenge command on the given game state.\nReturns the argument unchanged.\nGets the type of the command.\nCalls <code>U::from(self)</code>.\nRepresents a challenge-level command.\nAn enum representing all possible commands in the game.\nA trait that defines the basic behavior for all commands …\nRepresents a game-level command.\nExecutes the command on the given game state.\nExecutes the command on the given game state.\nReturns the argument unchanged.\nGets the type of the command.\nGets the type of the command.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents game-level commands that can be executed on the …\nCommand to move to the next challenge.\nCommand to move to the previous challenge.\nExecutes the game command on the given game state.\nReturns the argument unchanged.\nGets the type of the command.\nCalls <code>U::from(self)</code>.\nMoves the game state to the next challenge.\nMoves the game state to the previous challenge.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>KonnektorenJs</code> is the main struct that provides an …\nExecutes JavaScript code.\nExposes a function to execute commands from JavaScript in …\nExposes a function to send events from JavaScript to Rust.\nFinishes the current challenge with an optional result.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new instance of <code>KonnektorenJs</code>.\nSets the challenge data in the JavaScript environment.\nSets the internationalization (i18n) data.\nSets the result data in the JavaScript environment.\nA cart that contains products.\nA product that can be added to a cart.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")